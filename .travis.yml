language: cpp

env:
  - TARGET="Linux-ARM"
  - TARGET="Linux-X86"
  - TARGET="Linux-X86_64"
  - TARGET="Android-ARM"
  - TARGET="Android-X86"

before_install:
  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
  - if [ "$TARGET" = "Linux-ARM" ]; then sudo add-apt-repository -y ppa:linaro-maintainers/toolchain; fi
  - if [ "$TARGET" = "Linux-X86_64" ]; then sudo add-apt-repository -y ppa:andykimpe/cmake; fi
  - sudo apt-get update
install:
  - sudo apt-get install -y g++-4.8-multilib
  - if [ "$TARGET" = "Linux-ARM" ]; then sudo apt-get install -y g++-arm-linux-gnueabi; fi
  # On Linux-X86_64, we run the llgs test suite. This requires a recent enough
  # cmake (for the LLVM cmake step), and an install of lldb (for the tests to
  # be able to use the lldb python library without us building it).
  - if [ "$TARGET" = "Linux-X86_64" ]; then sudo apt-get install -y cmake swig lldb-3.3; fi
  # Extraction of the Android NDK is very verbose, drop the per-file messages.
  - if [ "$TARGET" = "Android-ARM" ]; then ./Support/Scripts/prepare-android-toolchain.sh "arm-linux-androideabi-4.8" | grep -v "^Extracting "; fi
  - if [ "$TARGET" = "Android-X86" ]; then ./Support/Scripts/prepare-android-toolchain.sh "x86-4.8" | grep -v "^Extracting "; fi

before_script:
  - mkdir -p build && cd build
  - cmake -DCMAKE_TOOLCHAIN_FILE="../Support/CMake/Toolchain-${TARGET}.cmake" ..
script:
  - make
  # The llgs test suite works only on Linux-X86_64 for now.
  - if [ "$TARGET" = "Linux-X86_64" ]; then ../Support/Testing/run-llgs-tests.sh; fi
